{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Jenkins",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "Default" : "development",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },

    "InstanceType" : {
      "Description" : "Jenkins EC2 instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "ServerName" : {
      "Description" : "Machine name for server",
      "Type" : "String"
    },
    "GitUsername" : {
      "Description" : "Git username",
      "NoEcho": "true",
      "Type" : "String"
    },
    "GitPassword" : {
      "Description" : "Git password",
      "NoEcho": "true",
      "Type" : "String"
    },

    "ChefOrganization" : {
      "Description" : "Your Chef Organization",
      "Type" : "String",
      "Default" : "stelligent"
    },

    "S3Bucket" : {
      "Description" : "S3 Bucket to pull your hosted chef validator key from",
      "Type" : "String",
      "Default" : "cdplatform"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "cc1.4xlarge" : { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "32" : "ami-ed65ba84", "64" : "ami-e565ba8c" }
    }
  },

  "Resources" : {

    "RootRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Statement" : [{
            "Effect" : "Allow",
            "Principal" : {
              "Service" : [ "ec2.amazonaws.com"]
            },
            "Action" : ["sts:AssumeRole"]
          }]
        },
        "Path" : "/",
        "Policies" : [{
          "PolicyName" : "root",
          "PolicyDocument" : {
            "Statement" : [{
              "Effect" : "Allow",
              "Action" : "*",
              "Resource" : "*"
            }]
          }
        }]
      }
    },
    "RootInstanceProfile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path" : "/",
        "Roles" : [{
          "Ref" : "RootRole"
        }]
      }
    },

    "User" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path": "/",
        "Policies": [{
          "PolicyName": "root",
          "PolicyDocument": { "Statement":[{
            "Effect":"Allow",
            "Action":"*",
            "Resource":"*"
          }]}
        }]
      }
    },

    "HostKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref": "User" }
      }
    },

    "WebServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "MinSize" : "1",
        "MaxSize" : "1",
        "DesiredCapacity" : "1"
      }
    },


    "LaunchConfig": {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "users" : {
              "tomcat" : {
              }
            },
            "packages" : {
              "yum" : {
                "gcc-c++"       : [],
                "autoconf"      : [],
                "automake"      : [],
                "libxml2-devel" : [],
                "libxslt-devel" : []
              }
            },
            "files" : {
              "/etc/chef/validator.pem" : {
                "source" : { "Fn::Join" : ["", ["https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/cert/", { "Ref" : "ChefOrganization" }, "-hostedchef.pem"]]},
                "authentication" : "S3AccessCreds"
              },
              "/etc/chef/client.rb" : {
                "content" : { "Fn::Join" : ["", [
                  "log_level        :info\n",
                  "log_location     STDOUT\n",
                  "chef_server_url  \"https://api.opscode.com/organizations/", { "Ref" : "ChefOrganization" }, "\"\n",
                  "validation_key         \"/etc/chef/validator.pem\"\n",
                  "validation_client_name \"", { "Ref" : "ChefOrganization" }, "-validator\""
                ]] },
                "mode" : "000644",
                "owner" : "root",
                "group" : "wheel"
              },
              "/etc/chef/node.json" : {
                "content" : {
                  "aws" : {
                    "s3" : {
                      "bucket" : { "Ref" : "S3Bucket" }
                    }
                  },

                  "jenkins" : {
                    "server" : {
                      "name" : { "Ref" : "ServerName" }
                    }
                  },
                  "git" : {
                    "username" : { "Ref" : "GitUsername" },
                    "password" : { "Ref" : "GitPassword" },
                    "org" : "stelligent",
                    "platform" : {
                      "repo" : "opendelivery_platform"
                    },
                    "jenkins" : {
                      "repo" : "opendelivery_jenkins"
                    }
                  },
                  "run_list": [
                    "role[base]",
                    "recipe[git]",
                    "recipe[tomcat]",
                    "recipe[opendelivery::path]",
                    "recipe[opendelivery::setup]",
                    "recipe[opendelivery::gem]",
                    "recipe[opendelivery]"
                  ]
                },
                "mode" : "000644",
                "owner" : "root",
                "group" : "wheel"
              }
            }
          }
        },
        "AWS::CloudFormation::Authentication" : {
          "S3AccessCreds" : {
            "type" : "S3",
            "accessKeyId" : { "Ref" : "HostKeys" },
            "secretKey" : {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]},
            "buckets" : [ { "Ref" : "S3Bucket" } ]
          }
        }
      },
      "Properties": {
        "IamInstanceProfile" : { "Ref": "RootInstanceProfile" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "FrontendGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",
          "yum update -y aws-cfn-bootstrap\n",

          "# Remove Ruby 1.8.7\n",
          "yum erase -y ruby rubygems\n",

          "# Install Ruby 1.9.3\n",
          "yum -y install ruby19-devel\n",

          "# Move Ruby 1.9.3 to Default Ruby\n",
          "ln -s /usr/bin/ruby1.9 /usr/bin/ruby\n",
          "ln -s /usr/bin/gem1.9 /usr/bin/gem\n",

          "# Install Chef\n",
          "wget https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chef-11.6.0-1.el6.x86_64.rpm\n", 
          "rpm -Uvh chef-11.6.0-1.el6.x86_64.rpm\n",

          "/opt/aws/bin/cfn-init -v -s ", { "Ref" : "AWS::StackId" }, " -r LaunchConfig ",
          "    --access-key ", { "Ref" : "HostKeys" },
          "    --secret-key ", { "Fn::GetAtt" : [ "HostKeys", "SecretAccessKey" ]},
          "    --region ", { "Ref" : "AWS::Region" }, "\n",

          "chef-client -j /etc/chef/node.json\n",

          "/opt/aws/bin/cfn-signal", " -e 0", " '", { "Ref" : "WaitHandle" }, "'\n"
        ]]}}
      }
    },


    "FrontendGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH and access to Apache and Tomcat",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"}
        ]
      }
    },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WebServerGroup",
      "Properties" : {
        "Handle" : { "Ref" : "WaitHandle" },
        "Timeout" : "990"
      }
    }
  },

  "Outputs" : {
  }
}
