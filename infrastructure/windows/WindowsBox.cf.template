{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Template to build a basic Windows machine with EC2 tools and chef installed on it.",
  
  "Parameters" : {
    "KeyPairName" : {
      "Description" : "Name of an existing Amazon EC2 key pair for RDP access",
      "Type" : "String"
    },
    "InstanceType" : {
      "Description" : "Amazon EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.medium", "c1.xlarge"]
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "m1.small"   : { "Arch" : "64" },
      "m1.medium"  : { "Arch" : "64" },
      "m1.large"   : { "Arch" : "64" },
      "m1.xlarge"  : { "Arch" : "64" },
      "m2.xlarge"  : { "Arch" : "64" },
      "m2.2xlarge" : { "Arch" : "64" },
      "m2.4xlarge" : { "Arch" : "64" },
      "c1.medium"  : { "Arch" : "64" },
      "c1.xlarge"  : { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"      : {"64" : "ami-b5bcd2dc"},
      "us-west-2"      : {"64" : "ami-9f0d9baf"},
      "us-west-1"      : {"64" : "ami-1fbf905a"}
    }
  },

  "Resources" : {
    "WindowsBoxSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP and RDP",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : "0.0.0.0/0"}
        ]
      }
    },


    "WindowsBox": {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "files" : {
              "c:\\cfn\\cfn-hup.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "[main]\n",
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
                  "region=", { "Ref" : "AWS::Region" }, "\n"
                  ]]}
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                "content": { "Fn::Join" : ["", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.WindowsBox.Metadata.AWS::CloudFormation::Init\n",
                  "action=cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" },
                                                 " -r WindowsBox",
                                                 " --region ", { "Ref" : "AWS::Region" }, "\n"
                ]]}
              },
              "C:\\Downloads\\EC2tools.msi" : {
                "source" : "http://sdk-for-net.amazonwebservices.com/latest/AWSToolsAndSDKForNet.msi"
              },
              "C:\\Downloads\\chef-install.msi" : {
                "source" : "http://opscode.com/chef/install.msi"
              },
              "C:\\Downloads\\git-install.exe" : {
                "source" : "https://msysgit.googlecode.com/files/Git-1.8.1.2-preview20130201.exe"
              }
            },
            "commands" : {
              "1-ec2-install" : {
                "command" : "C:\\Downloads\\EC2tools.msi /passive /log %TEMP%\\ec2-log.txt"
              },
              "2-chef-install" : {
                "command" : "C:\\Downloads\\chef-install.msi /passive /log %TEMP%\\chef-log.txt"
              },
              "3-git-install" : {
                "command" : "C:\\Downloads\\git-install.exe /silent /norestart /log=%TEMP%\\git-log.txt"
              }
            },
            
            "services" : {
              "windows" : {
                "cfn-hup" : {
                  "enabled" : "true",
                  "ensureRunning" : "true",
                  "files" : ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]
                }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType" : { "Ref" : "InstanceType" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                      { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "SecurityGroups" : [ {"Ref" : "WindowsBoxSecurityGroup"} ],
        "KeyName" : { "Ref" : "KeyPairName" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "<script>\n",

          "cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" }, 
          " -r WindowsBox",
          " --region ", { "Ref" : "AWS::Region" }, "\n",

          "cfn-signal.exe -e %ERRORLEVEL% ", { "Fn::Base64" : { "Ref" : "WindowsBoxWaitHandle" }}, "\n",
          
          "</script>"
          ]]}}
        }
    },

    "WindowsBoxWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WindowsBoxWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WindowsBox",
      "Properties" : {
        "Handle" : {"Ref" : "WindowsBoxWaitHandle"},
        "Timeout" : "3600"
      }
    }
  },

  "Outputs" : {
    "WindowsBoxURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WindowsBox", "PublicDnsName" ] } ]] },
      "Description" : "Windows Box URL. (Assuming IIS is installed, which it probably won't be in this particular configuration.) Please retrieve Administrator password of the instance and use it to access the URL"
    }
  }
}